<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>部落格就用Hexo來做吧！</title>
    <link href="/hexo/20250303/3488063042/"/>
    <url>/hexo/20250303/3488063042/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>已經決定要來寫部落格了，當然要來挑選一下工具，之前嘗試過不少線上既有平台，不是樣式要修改需要付費，就是侷限於在線上編輯，總是有點不自由…</p><p>就在那時，終於決定選擇已經被推薦很久的 <code>Hexo</code> ，來開始我的部落格！</p><p>整體的步驟是：</p><ol><li>安裝 Hexo 以及選用 Fluid 主題跟一些相關設置。</li><li>安裝一些常用的工具。</li><li>準備部署到 Github 以及設置 Github Pages</li><li>終於來寫篇文章吧！</li></ol><p>由於每個步驟裡面要做的事情也不少，所以都會分開文章作說明，首先這篇就是先針對第一步驟安裝 Hexo 開始囉！</p><h2 id="安裝-Hexo"><a href="#安裝-Hexo" class="headerlink" title="安裝 Hexo"></a>安裝 Hexo</h2><p>這邊不會去比較其他跟 <code>Hexo</code> 類似的靜態頁面產生器優劣，主要很單純的因為它可以使用 <code>Markdown</code> 撰寫文章，並且基底是用使用 <code>JavaScript</code> 較為熟悉，所以選擇了他，但或者未來的某天也會選擇使用 <a href="https://vitepress.dev/zh/">VitePress</a> <sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="主要是由 `Vue` 跟 `Vite` 所做的靜態頁面產生器。">[1]</span></a></sup> 也說不一定。</p><h3 id="環境需求"><a href="#環境需求" class="headerlink" title="環境需求"></a>環境需求</h3><ul><li><code>Node.js</code>，因為是基於 <code>JavaScript</code> 的工具，所以這是不可或缺的。</li><li><code>Git</code> ，常見的版本控制工具，後續因為部署也會使用到 <code>Github</code> ，所以這個也是必要的。</li><li><code>Visual Studio Code</code> ，這個是筆者的編輯器，當然你也可以選擇其他的編輯器。</li></ul><h3 id="1-安裝-Hexo-CLI"><a href="#1-安裝-Hexo-CLI" class="headerlink" title="1. 安裝 Hexo CLI"></a>1. 安裝 Hexo CLI</h3><p>首先，我們的環境要全局安裝 <code>Hexo CLI</code> ，這樣才能使用 <code>hexo</code> 指令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g hexo-cli<br></code></pre></td></tr></table></figure><h3 id="2-用-Hexo-建立新的部落格專案"><a href="#2-用-Hexo-建立新的部落格專案" class="headerlink" title="2. 用 Hexo 建立新的部落格專案"></a>2. 用 Hexo 建立新的部落格專案</h3><p>當確定已經安裝好 <code>Hexo CLI</code> 之後，就可以開始建立新的部落格專案了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">// &lt;folder&gt; 是你的部落格專案名稱<br>hexo init &lt;folder&gt;<br><span class="hljs-built_in">cd</span> &lt;folder&gt;<br>npm install<br></code></pre></td></tr></table></figure><p>當建立好了之後，進入專案資料夾，可以看到以下的目錄結構：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">.<br>├── _config.yml // 主要的設定檔<br>├── package.json // 相關的套件跟指令<br>├── scaffolds // 模板<br>├── <span class="hljs-built_in">source</span><br>|   ├── _drafts // 草稿文章<br>|   └── _posts // 已發布文章<br>└── themes // 樣式主題<br></code></pre></td></tr></table></figure><p>以上詳細內容都能在 <a href="https://hexo.io/zh-tw/docs/">Hexo 官方文件</a> 找到。</p><h3 id="3-常用指令"><a href="#3-常用指令" class="headerlink" title="3. 常用指令"></a>3. 常用指令</h3><p>當建立好專案之後，可以運行一下來看看是否成功。<br>首先是將本地寫好的 <code>Markdown</code> 文章生成靜態頁面檔案。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo generate<br></code></pre></td></tr></table></figure><p>接著在本地運作一個模擬伺服器，可以在瀏覽器上看到部落格的樣子。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo server<br></code></pre></td></tr></table></figure><p>初始默認的網址是 <code>http://localhost:4000/</code> ，在瀏覽器上輸入並進入，然後就會看到部落格的樣子了！</p><p><img src="https://firebasestorage.googleapis.com/v0/b/alpha-blog-fcffd.firebasestorage.app/o/%E6%88%AA%E5%9C%96%202025-03-03%20%E4%B8%8B%E5%8D%882.35.24.png?alt=media&token=8f21a66c-6544-41f7-a875-1890c409274c" alt="初始部落格"></p><p>一些全局可以先修改的部分，可以在 <code>_config.yml</code> 中修改，例如 <code>title</code>、<code>description</code>、<code>author</code> 等等。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-comment"># Site</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">Alpha&#x27;s</span> <span class="hljs-string">雜談</span><br><span class="hljs-attr">author:</span> <span class="hljs-string">Alpha</span><br><span class="hljs-attr">language:</span> <span class="hljs-string">zh-TW</span><br><span class="hljs-attr">favicon:</span> <span class="hljs-string">/img/favicon.png</span><br><br><span class="hljs-comment"># URL</span><br><span class="hljs-attr">url:</span> <span class="hljs-string">&lt;URL&gt;</span><br></code></pre></td></tr></table></figure><p>這邊的 <code>url</code> 是部署到網路上的時候會用到的，這邊先不用管，後續會再說明。</p><h2 id="Fluid-主題"><a href="#Fluid-主題" class="headerlink" title="Fluid 主題"></a>Fluid 主題</h2><p>再來就是第二個重頭戲啦！</p><p>上面能看到初始的部落格內容很精簡而且樣式也很普通，在開頭筆者有提到先前的線上平台沒有自由度，但我想要的自由度裡還是希望有一定的設置外觀，畢竟能夠快速方便上手這才是最重的，所以當看到 <code>Hexo</code> 有許多的主題可以套用選擇，那真的是棒極了！</p><p><img src="https://firebasestorage.googleapis.com/v0/b/alpha-blog-fcffd.firebasestorage.app/o/2025-02-02-1.png?alt=media&token=658e5a79-ae7c-4ed4-8276-deb2da727a1c" alt="Freedom"></p><h3 id="1-安裝-Fluid-主題"><a href="#1-安裝-Fluid-主題" class="headerlink" title="1. 安裝 Fluid 主題"></a>1. 安裝 Fluid 主題</h3><p>在 <code>Hexo</code> 的主題中，筆者選擇了 <code>Fluid</code> 主題，後續也會依照這個主題來進行設置。<br>首先，這個主題最新的版本希望是用 <code>npm</code> 安裝的方式，當然你也可以用 <code>themes</code> 的方式，筆者選擇了 是用前者。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install --save hexo-theme-fluid<br></code></pre></td></tr></table></figure><h3 id="2-設置-Fluid-主題"><a href="#2-設置-Fluid-主題" class="headerlink" title="2. 設置 Fluid 主題"></a>2. 設置 Fluid 主題</h3><p>首先，要在 <code>_config.yml</code> 中設置主題，這樣 <code>Hexo</code> 才知道要使用哪個主題。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">theme:</span> <span class="hljs-string">hexo-theme-fluid</span><br></code></pre></td></tr></table></figure><p>這邊主題有支援一定的多國語系，所以可以查看一下自己的語系是否支援或者需要自己擴充去設置。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">language:</span> <span class="hljs-string">zh-TW</span><br></code></pre></td></tr></table></figure><p>因為主題有很多預設功能已經很夠用了，所以筆者不會全部介紹，會針對有做變更的部分來說明。</p><p><img src="https://firebasestorage.googleapis.com/v0/b/alpha-blog-fcffd.firebasestorage.app/o/%E6%88%AA%E5%9C%96%202025-03-03%20%E4%B8%8B%E5%8D%882.35.24.png?alt=media&token=8f21a66c-6544-41f7-a875-1890c409274c" alt="Fluid 主題"></p><h3 id="3-設置外觀"><a href="#3-設置外觀" class="headerlink" title="3. 設置外觀"></a>3. 設置外觀</h3><p>在使用 <code>Fluid</code> 這款主題，假如要做一些外觀上的變更，你需要複製一份 <code>_config.yml</code> 在同一個地方並且命名為 <code>_config.fluid.yml</code> ，這樣 <code>Fluid</code> 主題才會去讀取這個檔案。</p><p>然後我想改一下主題預設的背景圖片，所以在 <code>_config.fluid.yml</code> 中加入以下的設置。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-comment"># Main</span><br><span class="hljs-attr">index:</span><br>  <span class="hljs-attr">banner_img:</span> <span class="hljs-string">/img/cover.png</span><br>  <span class="hljs-attr">banner_mask_alpha:</span> <span class="hljs-number">0.8</span><br>  <span class="hljs-attr">slogan:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">text:</span> <span class="hljs-string">&#x27;歡迎光臨，在這裡你甚至能看到一些有用的東西。&#x27;</span><br></code></pre></td></tr></table></figure><p>這裡，<code>index</code>是針對首頁相關的設置，<code>banner_img</code> 是設置背景圖片的路徑，<code>banner_mask_alpha</code> 是設置背景圖片的透明度，<code>slogan</code> 是設置首頁的標語，<code>enable</code> 是設置是否顯示標語，<code>text</code> 是設置標語的內容，這樣就完成了！</p><p>另外，如果你的文章內文的背景圖片也想統一，那麼你也需要為 <code>post</code> 增加相同的 <code>banner</code> 設置。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-comment"># Post</span><br><span class="hljs-attr">post:</span><br>  <span class="hljs-attr">banner_img:</span> <span class="hljs-string">/img/cover.png</span><br>  <span class="hljs-attr">banner_mask_alpha:</span> <span class="hljs-number">0.8</span><br></code></pre></td></tr></table></figure><p>接著，我也會針對 <code>Navbar</code> 進行一些設置，這樣可以讓部落格更加的完整。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-comment"># Navbar</span><br><span class="hljs-attr">navbar:</span><br>  <span class="hljs-attr">blog_title:</span> <span class="hljs-string">Alpha&#x27;s</span> <span class="hljs-string">雜談</span><br></code></pre></td></tr></table></figure><p>主題預設有 <code>首頁</code>、<code>分類</code>、<code>標籤</code>、<code>關於</code>、<code>切換深淺模式</code>、<code>搜索</code>，這邊我只修改了 <code>blog_title</code> ，其他先使用預設。</p><p>最後成品如下</p><p><img src="https://firebasestorage.googleapis.com/v0/b/alpha-blog-fcffd.firebasestorage.app/o/%E6%88%AA%E5%9C%96%202025-03-03%20%E4%B8%8B%E5%8D%882.33.17.png?alt=media&token=11c70ec8-dbd7-4db3-852b-7e78534e68dc" alt="修改後的部落格"></p><p>到這邊就算告一個段落，接著在下一篇文章會介紹一些常用的工具。</p><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>主要是由 <code>Vue</code> 跟 <code>Vite</code> 所做的靜態頁面產生器。<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Blog</tag>
      
      <tag>Markdown</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>部落格介紹</title>
    <link href="/talk/20250202/3171721102/"/>
    <url>/talk/20250202/3171721102/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>自從成為前端工程師以後，發現在知識吸收或是曾經閱覽過的事物，都會隨著時間的推移而遺忘。因此，我決定開始寫部落格，將自己學習到的知識、技術、心得之類的東西記錄下來，好讓我在未來方便回顧，但若是剛好裡面又有對其他人有幫助的話那也能藉機分享給大家。</p><h2 id="部落格指南"><a href="#部落格指南" class="headerlink" title="部落格指南"></a>部落格指南</h2><p>你可以從首頁開始慢慢瀏覽所有文章，也可以多多使用在右上角的導覽列各種好用功能：</p><ol><li><code>首頁</code>，顧名思義，當你在部落格迷失了方向，可以點點他回到首頁。</li><li><code>歸檔</code>，所有的文章都藏在這裡啦！你可以在這邊依照發文時間來找找文章。</li><li><code>分類</code>，每個文章都會有分類，你可以在這邊，來找你想要的分類文章。</li><li><code>標籤</code>，每個文章都會有標籤，你可以在這邊，來找你想要的標籤文章。</li><li><code>搜尋</code>，你如果跟我一樣是急性子，那道可以來這邊試試，輸入你想找的文章關鍵字快速查找，要是沒找到，可能博主還在寫，或者正要去寫，也說不定（Ｘ</li><li><code>關於</code>，這裡有關於博主的一些資訊，譬如我的 Github 之類。</li></ol><h2 id="部落格文章主題"><a href="#部落格文章主題" class="headerlink" title="部落格文章主題"></a>部落格文章主題</h2><p>這邊大致介紹可能會有的文章分類，當然也可能會有新的想法:</p><ul><li>程式：主要是程式語言、框架、套件等等的使用心得，不過大部分應該會是各種踩雷血淚史。</li><li>閱讀：書籍、文章等等的閱讀心得。（不過應該不會有太多）</li><li>影劇：希望能夠好好的記錄一下已經看過的電影或者影集，沒意外的話，都會是日劇為主。</li></ul><h2 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h2><p>最後，謝謝你來到我的部落格，希望你能在這裡找到你想要的東西，也歡迎你留言給我，無論是教學相長，或者是一起討論喜歡的演員偶像影集，都是很棒的事情。</p><!-- <div class="note note-info">            <p>假如對這個部落格的建置有興趣，可以來看看</p>          </div> -->]]></content>
    
    
    <categories>
      
      <category>雜談</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
